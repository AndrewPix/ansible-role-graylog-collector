---

- name: install dependencies
  package:
    name: ['curl', 'gawk', 'sed', 'lsb-release']
    state: present
  register: dependencies_installed
  until: dependencies_installed is success
  retries: 10
  delay: 2

# Gather facts again after installing lsb-release to allow using ansible_lsb.codename for nxlog installation
- name: collect facts
  setup:
    gather_subset:
      - '!all'
      - '!any'
      - facter
  when: dependencies_installed

- name: get latest sidecar package url
  shell: curl --silent {{ sidecar_github_repo }}/releases/latest|/usr/bin/awk '/browser_download_url/ { print $2 }' | /bin/sed 's/"//g'| grep {{ sidecar_architecture }} |grep deb
  register: install_latest_version
  args:
    warn: false
  until: install_latest_version is success
  retries: 10
  delay: 3
  changed_when: false
  when: sidecar_version is undefined and sidecar_local_package is undefined

- name: get specific sidecar package url
  shell: curl --silent {{ sidecar_github_repo }}/releases|grep {{ sidecar_version }} | /usr/bin/awk '/browser_download_url/ { print $2 }' | /bin/sed 's/"//g'|grep {{ sidecar_architecture }} |grep deb
  register: install_specific_version
  args:
    warn: false
  until: install_specific_version is success
  retries: 10
  delay: 3
  changed_when: false
  when: sidecar_version is defined and sidecar_local_package is undefined

- name: copy deb to server
  copy:
    src: "{{ playbook_dir }}/files/{{ sidecar_local_package }}"
    dest: /tmp/{{ sidecar_local_package }}
  when: sidecar_local_package is defined and sidecar_version is undefined

- name: install specific sidecar from official github repo
  apt:
    deb: "{{ install_specific_version.stdout_lines[0] }}"
    state: present
  become: true
  register: installed_specific
  until: installed_specific is success
  retries: 10
  delay: 2
  notify:
    - activate collector_service
  when: sidecar_version is defined and sidecar_local_package is undefined

# - name: debug
#   debug:
#     msg: "{{ install_latest_version.stdout_lines[0] }}"

- name: install latest sidecar from official github repo
  apt:
    deb: "{{ install_latest_version.stdout_lines[0] }}"
    state: present
  become: true
  register: installed_latest
  until: installed_latest is success
  retries: 10
  delay: 2
  notify:
    - activate collector_service
  when: sidecar_version is undefined and sidecar_local_package is undefined

- name: install local sidecar deb
  apt:
    deb: /tmp/{{ sidecar_local_package }}
    state: present
  notify:
    - activate collector_service
  register: local_installed
  until: local_installed is success
  retries: 10
  delay: 2
  when: sidecar_local_package is defined and sidecar_version is undefined
